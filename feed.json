{
    "version": "https://jsonfeed.org/version/1",
    "title": "陈伟的BLOG",
    "description": "哪有小孩一直哭，哪有赌徒一直输。",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/02/27/vue%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/",
            "url": "http://example.com/2024/02/27/vue%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/",
            "title": "",
            "date_published": "2024-02-27T14:41:54.496Z",
            "content_html": "<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: vue组件通信</span><br><span class=\"line\">date: 2024-02-27 21:45:55</span><br><span class=\"line\">description: 摘要:对vue的子传父、父传子、bus事件总线和vuex的具体使用方法进行整理。</span><br><span class=\"line\">tags:</span><br></pre></td></tr></table></figure>\n<h4 id=\"vue组件通信\"><a class=\"markdownIt-Anchor\" href=\"#vue组件通信\">#</a> vue 组件通信</h4>\n<h5 id=\"子传父\"><a class=\"markdownIt-Anchor\" href=\"#子传父\">#</a> 子传父</h5>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/02/27/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B1%87%E6%80%BB/",
            "url": "http://example.com/2024/02/27/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B1%87%E6%80%BB/",
            "title": "面试题汇总",
            "date_published": "2024-02-27T13:45:55.000Z",
            "content_html": "<h4 id=\"vue类汇总\"><a class=\"markdownIt-Anchor\" href=\"#vue类汇总\">#</a> VUE 类汇总</h4>\n<h5 id=\"1-mvvm\"><a class=\"markdownIt-Anchor\" href=\"#1-mvvm\">#</a> 1、MVVM</h5>\n<p>MVVM 分别指 model 层（数据模型层），view 层（视图层），viewModel 层（视图模型层）。主要实现了<strong>数据变化时视图自动更新。视图变化时绑定的数据自动更新。</strong></p>\n<p>MVVM 的优点： 实现视图 (view) 和模型 (model) 的分享，降低代码耦合，提⾼视图或逻辑的复⽤性。能自动更新 DOM 提⾼了可测试性<br>\n MVVM 的缺点:    bug 难被调试 (因为数据视图同步更新) 需要通过注释一段代码确定问题和 debugger 断点才能找到问题出在哪里</p>\n<h5 id=\"2-vue的响应式原理双向绑定原理\"><a class=\"markdownIt-Anchor\" href=\"#2-vue的响应式原理双向绑定原理\">#</a> 2、vue 的响应式原理 (双向绑定原理)</h5>\n<p>​\t在 Vue 2.x 中，利⽤的是 Object.defineProperty（es5 特性） 去劫持对象的访问器（Getter、Setter），当对象属性值发⽣变化时可获取变化，然后根据变化来作后续响应；(一个一个的劫持)。<br>\n​\t在 Vue 3.0 中，则是通过 Proxy （es6 特性）代理对象进⾏类似的操作。劫持的是整个对象，只要对象中的属性变化了，都能劫持到</p>\n<p>Object.defineProperty 和 Proxy 的优缺点:<br>\nProxy: 可以直接监听整个对象，⽽⾮是对象的某个属性；可以直接监听数组的变化；拦截⽅法丰富 (get set deleteProperty、has 等)<br>\n Object.defineProperty：兼容性较好（可⽀持到 IE9）</p>\n<p><strong>简单概述</strong> ：通过 Object.defineProperty 完成对于数据的劫持，通过观察者模式，完成对于节点的数据更新<br>\n<strong>详细概述</strong>：通过 Object.defineProperty 方法 完成了对于 Vue 实例中数据的 劫持，通过对于 data 中数据 进行 set 的劫持监听，然后通过<strong>观察者模式</strong>，通知 对应的绑定节点 进行节点数据更新，完成数据驱动视图的更新</p>\n<p><strong>观察者模式</strong>:\tvue 采用的是观察者模式，是一种一对多的关系，一上来 vue 在解析渲染时，会进行依赖收集，会将渲染 watcher、计算属性 watcher、侦听器 watcher, 都收集到对应的 dep 中，将来 Object.defineProperty 监听到数据变化，就根据依赖关系，派发更新</p>\n<h5 id=\"3-vue路由跳转及传参方式\"><a class=\"markdownIt-Anchor\" href=\"#3-vue路由跳转及传参方式\">#</a> 3、vue 路由跳转及传参方式</h5>\n<p>query 传参：可以使用 path 也可以使用 name (具名路由)。传递的信息会出现在 url 中类似于 get</p>\n<p>params 传参：必须要用命名路由的方式传值；不会显示在地址栏中，刷新会丢失 (可以配合 localStorage 使用)</p>\n<h5 id=\"4-vue组件通信\"><a class=\"markdownIt-Anchor\" href=\"#4-vue组件通信\">#</a> 4、vue 组件通信</h5>\n<p>父传子：通过 props 将数据在组件树中进行自上而下的传递。</p>\n<p>子传父：子组件通过 emit 方法触发一个自定义事件，并将数据传递给父组件，父组件通过监听这个事件来接收数据。<br>\nbus 事件总线：可通过 EventBus 进⾏信息的发布与订阅</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.prototype.$eventBus = new Vue()</span><br><span class=\"line\"></span><br><span class=\"line\">// A组件中, 监听 bus的事件</span><br><span class=\"line\">this.$eventBus.$on(&#x27;事件名&#x27;, function(参数1, 参数2, ...) &#123;&#125;)</span><br><span class=\"line\">// B组件中, 触发 bus的事件</span><br><span class=\"line\">this.$eventBus.$emit(&#x27;事件名&#x27;, 参数1, 参数2, ...)</span><br></pre></td></tr></table></figure>\n<p>vuex 通信：具体实现<br>\n父组件调用子组件中的方法：<br>\n1、ref 直接调用<br>\n 2、$children。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this.$children[0]调用子组件的方法</span><br></pre></td></tr></table></figure>\n<p>3、emit 和 on。<br>\n子组件调用父组件的方法<br>\n 1、$parent。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this.$parent.父组件中的方法</span><br></pre></td></tr></table></figure>\n<p>2、$emit</p>\n<h5 id=\"5-vue路由模式hash和history\"><a class=\"markdownIt-Anchor\" href=\"#5-vue路由模式hash和history\">#</a> 5、Vue 路由模式 hash 和 history</h5>\n<p>Hash 模式地址栏中有 #，history 没有，history 模式下刷新，会出现 404 情况，需要后台配置</p>\n<p>HTML5 提供了 History API 来实现 URL 的变化。其中最主要的 API 有以下两个：history.pushState () 和 history.repalceState ()。这两个 API 可以在不进行刷新的情况下，操作浏览器的历史纪录。唯一不同的是，前者是新增一个历史记录，后者是直接替换当前的历史记录。</p>\n<h4 id=\"js类汇总\"><a class=\"markdownIt-Anchor\" href=\"#js类汇总\">#</a> js 类汇总</h4>\n<p>1、js 高阶函数 (map，foreach。。。)<br>\n map 遍历：对原来的数组没有影响；创建一个新数组，其结果是该数组中的每个元素都调用提供的函数后返回的结果<br>\n filter 过滤：返回值为一个新的数组，这个数组里面包含参数里面所有被保留的项。<br>\nsort 排序:</p>\n<h4 id=\"css和html汇总\"><a class=\"markdownIt-Anchor\" href=\"#css和html汇总\">#</a> css 和 html 汇总</h4>\n<h5 id=\"优化汇总\"><a class=\"markdownIt-Anchor\" href=\"#优化汇总\">#</a> 优化汇总</h5>\n<h6 id=\"1-html层面优化\"><a class=\"markdownIt-Anchor\" href=\"#1-html层面优化\">#</a> 1、html 层面优化</h6>\n<p>1、减少文件大小 (压缩)</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/02/12/vue3%E5%AD%A6%E4%B9%A0/",
            "url": "http://example.com/2024/02/12/vue3%E5%AD%A6%E4%B9%A0/",
            "title": "vue3学习",
            "date_published": "2024-02-12T08:43:27.000Z",
            "content_html": "<h3 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h3>\n<p>学习 vue3 的话我感觉先了解一下 vue3 相对于 vue2 都有哪些优点会更容易帮助学习。毕竟有句成语说的好 &quot;欲先制敌，必先制己&quot;，想战胜敌人就得先了解敌人</p>\n<img src=\"E:\\Blog\\public\\images\\meme\\shock.png\" style=\"zoom:50%;\" />\n<p>vue3 相对于 vue2 的优点包括</p>\n<ol>\n<li>性能更好，因为 vue3 优化了 diff 算法，内存占用也更低</li>\n<li>渲染速度更快</li>\n<li>更小的打包体积</li>\n<li>更好的 Typescript 支持</li>\n<li>使用组合式 API  ,Compostion API。vue2 使用的是选项式 API</li>\n</ol>\n<p>虽然 vue3 很多方面都要优于 vue2，但 vue2 也有很好的实用性，vue2 已经停止维护了经过长时间的打磨已经比较成熟了，也有很完善的社区和大量的文档学习资源。</p>\n<h3 id=\"setup语法糖\"><a class=\"markdownIt-Anchor\" href=\"#setup语法糖\">#</a> setup 语法糖</h3>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/01/30/%E4%BC%98%E5%8C%96hexo%E7%9A%84%E4%BA%A4%E4%BA%92%E6%95%88%E6%9E%9C/",
            "url": "http://example.com/2024/01/30/%E4%BC%98%E5%8C%96hexo%E7%9A%84%E4%BA%A4%E4%BA%92%E6%95%88%E6%9E%9C/",
            "title": "优化hexo的主题交互效果",
            "date_published": "2024-01-30T07:46:50.000Z",
            "content_html": "<h5 id=\"next的页面样式优化配置项全都在主题文件的_configyml中修改\"><a class=\"markdownIt-Anchor\" href=\"#next的页面样式优化配置项全都在主题文件的_configyml中修改\">#</a> Next 的页面样式优化 (配置项全都在主题文件的_config.yml 中修改)</h5>\n<h6 id=\"设置布局\"><a class=\"markdownIt-Anchor\" href=\"#设置布局\">#</a> 设置布局</h6>\n<p>首先在主题文件的_config.yml 中可以看到 schemes 配置主要分为 muse (默认),mist,pisces,gemini 可以根据想要的效果自己切换</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ---------------------------------------------------------------</span><br><span class=\"line\"># Scheme Settings</span><br><span class=\"line\"># ---------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\"># Schemes</span><br><span class=\"line\"># scheme: Muse</span><br><span class=\"line\"># scheme: Mist</span><br><span class=\"line\"># scheme: Pisces</span><br><span class=\"line\"># scheme: Gemini</span><br></pre></td></tr></table></figure>\n<h6 id=\"添加订阅\"><a class=\"markdownIt-Anchor\" href=\"#添加订阅\">#</a> 添加订阅</h6>\n<p>打开主题文件夹的_config.yml 搜索 follow_me 只要添加以下代码就可以</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RSS: /atom.xml || fa fa-rss</span><br></pre></td></tr></table></figure>\n<p>完成之后点击进任意一个文章，下拉到最下方就可以打到一个 RSS 的订阅标签，在主页是没有标签的。</p>\n<h6 id=\"点击出现桃心效果\"><a class=\"markdownIt-Anchor\" href=\"#点击出现桃心效果\">#</a> 点击出现桃心效果</h6>\n<p>需要在 themes\\hexo-theme-next\\source\\js 文件夹下操作</p>\n<p>创建一个 clickLove.js 文件并将以下内容粘贴进去</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!function (e, t, a) &#123;</span><br><span class=\"line\">    function n() &#123;</span><br><span class=\"line\">        c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;), o(), r()</span><br><span class=\"line\">    &#125; function r() &#123; for (var e = 0; e &lt; d.length; e++)d[e].alpha &lt;= 0 ? (t.body.removeChild(d[e].el), d.splice(e, 1)) : (d[e].y--, d[e].scale += .004, d[e].alpha -= .013, d[e].el.style.cssText = &quot;left:&quot; + d[e].x + &quot;px;top:&quot; + d[e].y + &quot;px;opacity:&quot; + d[e].alpha + &quot;;transform:scale(&quot; + d[e].scale + &quot;,&quot; + d[e].scale + &quot;) rotate(45deg);background:&quot; + d[e].color + &quot;;z-index:99999&quot;); requestAnimationFrame(r) &#125; function o() &#123; var t = &quot;function&quot; == typeof e.onclick &amp;&amp; e.onclick; e.onclick = function (e) &#123; t &amp;&amp; t(), i(e) &#125; &#125; function i(e) &#123; var a = t.createElement(&quot;div&quot;); a.className = &quot;heart&quot;, d.push(&#123; el: a, x: e.clientX - 5, y: e.clientY - 5, scale: 1, alpha: 1, color: s() &#125;), t.body.appendChild(a) &#125; function c(e) &#123; var a = t.createElement(&quot;style&quot;); a.type = &quot;text/css&quot;; try &#123; a.appendChild(t.createTextNode(e)) &#125; catch (t) &#123; a.styleSheet.cssText = e &#125; t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a) &#125; function s() &#123; return &quot;rgb(&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;)&quot; &#125; var d = []; e.requestAnimationFrame = function () &#123; return e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (e) &#123; setTimeout(e, 1e3 / 60) &#125; &#125;(), n()</span><br><span class=\"line\">&#125;(window, document);</span><br></pre></td></tr></table></figure>\n<p>然后在 themes\\hexo-theme-next\\layout_layout.njk 文件的<head></head>中间区域添加</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/clicklove.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>完成之后点击博客区域就可以看到爱心飘出来了。</p>\n<h6 id=\"在文章结尾处添加类似于本文结束的标记\"><a class=\"markdownIt-Anchor\" href=\"#在文章结尾处添加类似于本文结束的标记\">#</a> 在文章结尾处添加类似于 “本文结束” 的标记</h6>\n<p>在 themes\\hexo-theme-next\\layout\\ _macro 中新建一个文件 passage-end-tag.njk 并添加类似以下内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">    &#123;% if not is_index %&#125;</span><br><span class=\"line\">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class=\"line\">    &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>然后再打开 themes\\hexo-theme-next\\layout\\ _macro\\post.njk 文件，搜索 post-footer 然后在前方添加以下代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">   &#123;% if not is_index %&#125;</span><br><span class=\"line\">     &#123;% include &#x27;passage-end-tag.njk&#x27; %&#125;</span><br><span class=\"line\">   &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>然后在主题的_config.yml 中添加</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passage_end_tag: true</span><br></pre></td></tr></table></figure>\n<p>最后打开任意一个博文翻到最后一页就可以看到刚刚添加的效果</p>\n<h6 id=\"添加访客数量\"><a class=\"markdownIt-Anchor\" href=\"#添加访客数量\">#</a> 添加访客数量</h6>\n<p>打开 themes\\hexo-theme-next\\layout\\ _partials\\footer.njk</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//首先在class=&quot;copyright&quot;的div标签上方添加以下代码</span><br><span class=\"line\">&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">//然后在希望出现访客数量的地方添加，本人放在了主页最下方，所以是在footer.njk文件的powered-by上方添加的</span><br><span class=\"line\">&lt;div class=&quot;powered-by&quot;&gt;</span><br><span class=\"line\">&lt;i class=&quot;fa fa-user-md&quot;&gt;&lt;/i&gt;&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</span><br><span class=\"line\">  本站访客数:&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;</span><br><span class=\"line\">&lt;/span&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>访问数量统计有两个方法：</p>\n<p>1、pv, 是指单个用户连续点击 N 个文章就记录 N 次</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;</span><br><span class=\"line\">    本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次</span><br><span class=\"line\">&lt;/span&gt;</span><br></pre></td></tr></table></figure>\n<p>2、uv, 是指单个用户点击 N 个文章只记录 1 次</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</span><br><span class=\"line\">  本站总访问量&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;次</span><br><span class=\"line\">&lt;/span&gt;</span><br></pre></td></tr></table></figure>\n<h6 id=\"添加统计功能\"><a class=\"markdownIt-Anchor\" href=\"#添加统计功能\">#</a> 添加统计功能</h6>\n<p>包括字数统计，阅读时长统计等</p>\n<p>在 \\themes\\hexo-theme-next_config.yml 中配置找到以下内容修改即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Post wordcount display settings</span><br><span class=\"line\"># Dependencies: https://github.com/next-theme/hexo-word-counter</span><br><span class=\"line\">symbols_count_time:</span><br><span class=\"line\">  # 是否另起一行（true的话不和发表时间等同一行）</span><br><span class=\"line\">  separated_meta: true</span><br><span class=\"line\">  # 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）</span><br><span class=\"line\">  item_text_post: true</span><br><span class=\"line\">  # 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）</span><br><span class=\"line\">  item_text_total: true</span><br></pre></td></tr></table></figure>\n<h6 id=\"添加加载效果类似loading\"><a class=\"markdownIt-Anchor\" href=\"#添加加载效果类似loading\">#</a> 添加加载效果 (类似 Loading)</h6>\n<p>查看_config.yml 中是否有 pace 配置项。如果有将 enable 改为 true 即可。如果是老版的 next 的话可能会没有这个配置项需要去引用。详细方法可见 <a href=\"https://zhuanlan.zhihu.com/p/28128674?utm_id=0\">老版 next 解决点击此处，查看第 19 个节</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Progress bar in the top during page loading.</span><br><span class=\"line\"># For more information: https://github.com/CodeByZach/pace</span><br><span class=\"line\">pace:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  # All available colors:</span><br><span class=\"line\">  # black | blue | green | orange | pink | purple | red | silver | white | yellow</span><br><span class=\"line\">  color: blue</span><br><span class=\"line\">  # All available themes:</span><br><span class=\"line\">  # big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span><br><span class=\"line\">  # corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal  这些是一些加载效果，顶部加载进度条是minimal,material是类似一个Loading效果，可以切换自己想要的效果</span><br><span class=\"line\">  theme: minimal</span><br></pre></td></tr></table></figure>\n<h6 id=\"添加版权\"><a class=\"markdownIt-Anchor\" href=\"#添加版权\">#</a> 添加版权</h6>\n<p>_config.yml 中搜索下面的关键字，将 sidebar，post 值改为 true 就可以看到版本声明了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Creative Commons 4.0 International License.</span><br><span class=\"line\"># See: https://creativecommons.org/about/cclicenses/</span><br><span class=\"line\"># 版权</span><br><span class=\"line\">creative_commons:</span><br><span class=\"line\">  # Available values: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | cc-zero</span><br><span class=\"line\">  license: by-nc-sa  # 许可证</span><br><span class=\"line\">  # Available values: big | small</span><br><span class=\"line\">  size: small</span><br><span class=\"line\">  sidebar: true  # 侧边栏展示</span><br><span class=\"line\">  post: true   # 底部展示</span><br><span class=\"line\">  # You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span><br><span class=\"line\">  # CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span><br><span class=\"line\">  language: zh-Hans</span><br></pre></td></tr></table></figure>\n<h6 id=\"添加阅读全文\"><a class=\"markdownIt-Anchor\" href=\"#添加阅读全文\">#</a> 添加阅读全文</h6>\n<p>配置完成后博客首页文章将只展示需要展示的，多余内容将变成阅读全文</p>\n<p>这个功能是<strong>默认开启</strong>状态在主题的_config.yml 文件中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">excerpt_description: true</span><br></pre></td></tr></table></figure>\n<p>使用方法一:</p>\n<p>在需要展示的内容后添加</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure>\n<p>案例说明:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">摘要:本文主要介绍如何添加阅读全文功能，使你的博客看上去更加的简洁</span><br><span class=\"line\">&lt;!--more--&gt;</span><br><span class=\"line\">主体内容部分。。。</span><br></pre></td></tr></table></figure>\n<p>使用方法一配置，内容部分将只展示 more 之前的摘要部分，以下部分将会变成阅读全文按钮</p>\n<p>使用方法二:</p>\n<p>在博客的 front-matter 中添加 description 关键字</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 添加阅读全文</span><br><span class=\"line\">date: 2024-01-30 01:08:10</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">description: 本文主要介绍如何添加阅读全文功能，使你的博客看上去更加的简洁。</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>这样主体内容部分将全部不展示只展示 description 关键字设置的内容，当然主体内容还是变成了阅读全文按钮</p>\n<p>自由度方面方法一更高可以不写摘要直接展示内容吸引读者，但个人感受养成写摘要的习惯对读者和自己都挺好的</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/01/17/%E5%9C%B0%E5%9B%BE%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0/",
            "url": "http://example.com/2024/01/17/%E5%9C%B0%E5%9B%BE%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0/",
            "title": "地图开发学习",
            "date_published": "2024-01-16T16:03:19.000Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "http://example.com/2023/12/13/VMware%E8%99%9A%E6%8B%9F%E5%99%A8%E5%AE%89%E8%A3%85/",
            "url": "http://example.com/2023/12/13/VMware%E8%99%9A%E6%8B%9F%E5%99%A8%E5%AE%89%E8%A3%85/",
            "title": "VMware虚拟器安装",
            "date_published": "2023-12-13T10:40:17.000Z",
            "content_html": "<h5 id=\"摘要本文主要记录了vmware虚拟机的安装和centos镜像的下载-在开发-生产-教学过程中需要使用不同的操作系统都可以通过虚拟机调试来完成从而达到降低成本的目的\"><a class=\"markdownIt-Anchor\" href=\"#摘要本文主要记录了vmware虚拟机的安装和centos镜像的下载-在开发-生产-教学过程中需要使用不同的操作系统都可以通过虚拟机调试来完成从而达到降低成本的目的\">#</a> 摘要：本文主要记录了 VMware 虚拟机的安装和 Centos 镜像的下载。在开发、生产、教学过程中需要使用不同的操作系统都可以通过虚拟机调试来完成，从而达到降低成本的目的。</h5>\n<span id=\"more\"></span>\n<h3 id=\"1-vmware虚拟机下载地址\"><a class=\"markdownIt-Anchor\" href=\"#1-vmware虚拟机下载地址\">#</a> 1、VMware 虚拟机下载地址</h3>\n<p><a href=\"https://customerconnect.vmware.com/cn/downloads/info/slug/desktop_end_user_computing/vmware_workstation_pro/17_0\">VMware Workstation Pro 虚拟机下载地址</a></p>\n<p><a href=\"https://mirrors.tuna.tsinghua.edu.cn/centos/7.9.2009/isos/x86_64/\">Centos 镜像下载地址</a></p>\n<p>千万不要进入 VMware 注册页面就切换为中文 (下方有原因图片展示)，密码校验是大小写字母 + 数字 + 特殊字符，国家可以选择美国地区；<a href=\"https://customerconnect.vmware.com/account-registration\">VMware 英文注册地址 (不要切换为中文哦！！！)</a></p>\n<p>可以成功注册的例子:</p>\n<p>​\tEmail address： 填写正确的邮箱，需要用邮箱验证</p>\n<p>​\tCity： Sacramento</p>\n<p>​\tZip or postal code： 94203</p>\n<p>​\tCountry/Territory： United States</p>\n<p>​\tState or province： California</p>\n<p>​\tBusiness phone： 0013602923672<br>\n​\t<a href=\"https://blog.csdn.net/weixin_42417351/article/details/128042004\">上面注册参数原文链接</a></p>\n<h5 id=\"tip下载vmware的时候改成中文注册页会出现的问题\"><a class=\"markdownIt-Anchor\" href=\"#tip下载vmware的时候改成中文注册页会出现的问题\">#</a> tip: 下载 VMware 的时候改成中文注册页会出现的问题</h5>\n<p>​\t注册页面一定要是英文的，中文的会无法校验验证码，下图是中文页面的情况：</p>\n<p><img src=\"C:%5CUsers%5Cchen'wei%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231213190324189.png\" alt=\"image-20231213190324189\"></p>\n<p>正确情况应该是下图这样的：</p>\n<p><img src=\"C:%5CUsers%5Cchen'wei%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231213190539927.png\" alt=\"image-20231213190539927\"></p>\n<p>安装后 VMware pro17 的密钥: JU090-6039P-08409-8J0QH-2YR7F</p>\n<h3 id=\"2-centos设备中文\"><a class=\"markdownIt-Anchor\" href=\"#2-centos设备中文\">#</a> 2、Centos 设备中文</h3>\n<p>​\tcentos 在进入时如果忘了配置那打开后会是英文的，如果想要配置中文可以根据以下步骤:</p>\n<p>1、显示当前语言，英文状态下唤起右击菜单，点击 Open Terminal 打开终端</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">localectl status</span><br><span class=\"line\">\t/*回车后展示以下内容，LANG=en_US.UTF-8就是当前的语言*/</span><br><span class=\"line\">\tSystem Locale: LANG=en_US.UTF-8</span><br><span class=\"line\">       VC Keymap: us</span><br><span class=\"line\">      X11 Layout: us</span><br></pre></td></tr></table></figure>\n<p>2、修改语言为中文</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*LANG=跟的是语言的类型zh_CN.UTF-8可以修改成中文，en_US.UTF-8可以修改为英文*/</span><br><span class=\"line\">localectl set-locale LANG=zh_CN.UTF-8</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.cnblogs.com/liulianzhen99/articles/17668096.html\">本博客参考原文链接</a></p>\n",
            "tags": [
                "VMware安装遇到的问题汇总摘要"
            ]
        },
        {
            "id": "http://example.com/2023/12/13/Nginx%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86%E5%92%8C%E5%A4%8D%E4%B9%A0/",
            "url": "http://example.com/2023/12/13/Nginx%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86%E5%92%8C%E5%A4%8D%E4%B9%A0/",
            "title": "Nginx知识整理和复习",
            "date_published": "2023-12-13T08:17:15.000Z",
            "content_html": "<h5 id=\"摘要本文主要记录nginx从安装到基本使用\"><a class=\"markdownIt-Anchor\" href=\"#摘要本文主要记录nginx从安装到基本使用\">#</a> 摘要：本文主要记录 Nginx 从安装到基本使用</h5>\n<span id=\"more\"></span>\n<h4 id=\"基础知识\"><a class=\"markdownIt-Anchor\" href=\"#基础知识\">#</a> 基础知识</h4>\n<p>​\tNginx 是一个 HTTP 和反向代理的 web 服务器，是由俄罗斯人伊戈尔・赛索耶夫为 Rambler.ru 站点开发的。</p>\n<p>​\tNginx 具有占用内存少，并发能力强，支持热部署，高性能，高可靠，最最最重要的免费并可以用于商业化等优点</p>\n<p>​\tNginx 的主要使用场景包括:</p>\n<p>​\t\t1、web 服务器：作为 web 服务器时，可以处理连接请求，提供静态资源文件。</p>\n<p>​\t\t2、反向代理服务器：作为反向代理服务器时，可以将请求转发给后端的应用服务器，同时负责处理负载均衡和缓存等任务。</p>\n<p>​\t\t3、负载均衡器：作为负载均衡器时，可以作为高性能的负载均衡器使用，将请求分发到多个应用服务器，从面提高系统的并发能力和可用性。</p>\n<p>​\t\t4、HTTP 缓存服务器：作为 HTTP 缓存服务器时，可以缓存常见的静态资源，从而提高访问速度和用户体验。</p>\n<p>​\t同时 Nginx 和 Nodejs 有很多类似的地方比如说都是基于事件驱动的非阻塞 I/O 模型，可以在高负载情况下保持良好的响应速度；都能够在多核 CPU 上运行，可以通过集群方式来实现横向扩展；也都有灵活的模块化架构，可以通过插件或模块来满足不同的需求；都适合处理大量连接和数据，并且数据传输过程中，采用的都是高效协议和算法能保证网络传输效率。但 Nginx 和 nodejs 各有各的一片天！Nginx 擅长于底层服务端资源处理，Nodejs 更擅长上层具体业务逻辑的处理。</p>\n<h4 id=\"nginx快速安装\"><a class=\"markdownIt-Anchor\" href=\"#nginx快速安装\">#</a> Nginx 快速安装</h4>\n",
            "tags": [
                "对Nginx的学习记录"
            ]
        },
        {
            "id": "http://example.com/2023/11/28/%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%B9%B6%E8%AE%B0%E5%BD%95%E5%88%9B%E5%BB%BA%E6%96%B9%E6%B3%95/",
            "url": "http://example.com/2023/11/28/%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%B9%B6%E8%AE%B0%E5%BD%95%E5%88%9B%E5%BB%BA%E6%96%B9%E6%B3%95/",
            "title": "创建Hexo博客",
            "date_published": "2023-11-28T11:43:05.000Z",
            "content_html": "<h3 id=\"基本需求\"><a class=\"markdownIt-Anchor\" href=\"#基本需求\">#</a> 基本需求</h3>\n<p>​\t下载 node.js (<a href=\"https://nodejs.org/en\">node.js 官网</a>) 下载完成后使用 node -v 和 npm -v 可以查看版本。最好先下载 nvm，然后通过 nvm 下载 node（先下载 node 再下 nvm 会报错</p>\n<p>下载完 npm 后通过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<p>下载 cnpm 依赖。可以提高下载速度，通过 cnpm -v 也可以查看安装是否成功和具体信息</p>\n<h3 id=\"hexo基本命令\"><a class=\"markdownIt-Anchor\" href=\"#hexo基本命令\">#</a> hexo 基本命令</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo -v   查看版本</span><br><span class=\"line\">hexo clean   清理hexo缓存</span><br><span class=\"line\">hexo n &quot;文章名&quot; ==  hexo new &quot;文章名&quot;</span><br><span class=\"line\">hexo p  ==  hexo publish   草稿</span><br><span class=\"line\">hexo g  == hexo generate   生成静态网页</span><br><span class=\"line\">hexo s  == hexo server    启动本地静态模式</span><br><span class=\"line\">hexo d  == hexo deploy    推送本地数据到服务器</span><br></pre></td></tr></table></figure>\n<h3 id=\"正式步骤\"><a class=\"markdownIt-Anchor\" href=\"#正式步骤\">#</a> 正式步骤</h3>\n<h5 id=\"步骤一安装hexo脚手架\"><a class=\"markdownIt-Anchor\" href=\"#步骤一安装hexo脚手架\">#</a> 步骤一：安装 hexo 脚手架</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm install hexo-cli -g   //安装hexo脚手架</span><br><span class=\"line\">hexo -v   //查看版本信息</span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤二使用hexo\"><a class=\"markdownIt-Anchor\" href=\"#步骤二使用hexo\">#</a> 步骤二：使用 hexo</h5>\n<p>cmd 中切换到需要创建博客的盘符再进行以下操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir Blog    //创建一个Blog文件夹</span><br><span class=\"line\">hexo init     //初始化一个hexo博客 </span><br><span class=\"line\">hexo s        //运行博客在本地的4000端口(localhost:4000)主要是起到一个预览的作用</span><br></pre></td></tr></table></figure>\n<p>浏览器输入 localhost:4000 可以打开一个脚手架自动生成的一个默认博文</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n &quot;博文的名字&quot;       //创建一个自己的博文 hexo n &quot;&quot;  拼全就是hexo new &quot;&quot;,new可以简写成n</span><br><span class=\"line\">cd source/_posts       //到这个路径下再ls看一下是否有刚刚生成的博文</span><br></pre></td></tr></table></figure>\n<h5 id=\"tip修改博文方法之一是vim的方式修改-window无法直接使用-解决方法如下\"><a class=\"markdownIt-Anchor\" href=\"#tip修改博文方法之一是vim的方式修改-window无法直接使用-解决方法如下\">#</a> tip: 修改博文方法之一是 vim 的方式修改。window 无法直接使用。解决方法如下：</h5>\n<p><em><strong>前提</strong></em>：在 powershell 中运行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -o gvim90.exe https://ftp.nluug.nl/pub/vim/pc/gvim90.exe ; ./gvim90.exe</span><br></pre></td></tr></table></figure>\n<p>下载 vim 或者到 (<a href=\"https://www.vim.org/download.php#pc\">官网</a>) 自行下载</p>\n<p>1、以管理员身份运行 PowerShell</p>\n<p>2、 执行以下命令，并输入 Y 即可；这个命令大概的意思就是是否允许执行不信息的脚本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure>\n<p>3、使用 new-item 命令创建一个配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new-item -path $profile -itemtype file -force</span><br></pre></td></tr></table></figure>\n<p>4、创建完成后在 c 盘 - 用户 - 文档 - PowerShell 里的 Microsoft.PowerShell_profile.ps1 文件里加上以下命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set-alias vim &quot;vim.exe的安装位置比如 C:\\Program Files (x86)\\Vim\\vim90\\vim.exe是我的vim.exe位置&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\"># To edit the Powershell Profile</span><br><span class=\"line\"># (Not that I&#x27;ll remember this)</span><br><span class=\"line\">Function Edit-Profile</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    vim $profile</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"># To edit Vim settings</span><br><span class=\"line\">Function Edit-Vimrc</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    vim $HOME\\_vimrc</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">5、最后在powerShell中输入vim出现编辑页面就成功了</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"http://www.wowotech.net/soft/vim_in_powershell.html\">参考文章链接</a></p>\n<p>可以使用 vim 对博客进行修改也可以使用 vscode，hbuildx 等编辑软件打开。编写是 md 的编写格式</p>\n<h5 id=\"将博客部署到github\"><a class=\"markdownIt-Anchor\" href=\"#将博客部署到github\">#</a> 将博客部署到 github</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm i --save hexo-deployer-git            //安装一个git部署插件在Blog文件夹下</span><br></pre></td></tr></table></figure>\n<p>首先进入 github,new repository 新建一个创建，注意仓库地址最好与 git 名一致方便查找。</p>\n<p>打开 Blog 文件夹下的_config.yml 文件，找到</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Deployment</span><br><span class=\"line\">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: &quot;&quot;</span><br></pre></td></tr></table></figure>\n<p>将上面的 type: &quot;&quot; 向下内容修改为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type: git</span><br><span class=\"line\">  repo: github创建的地址</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>修改完成后控制台输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d       //将hexo博客部署到git首次部署会要求输入git账号密码</span><br></pre></td></tr></table></figure>\n<p>部署完之后就可以直接通过网址访问了，如果出现以下类似问题</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TypeError: Cannot read properties of null (reading &#x27;utcOffset&#x27;)</span><br></pre></td></tr></table></figure>\n<p>虽然项目还能运行但在终端会出现警告。大至原因是因为在 Blog 文件下的_config.yml 配置文件内的 timezone 属性出现了问题，改成下面任意一个地区的时间。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//国区只有这五个地区的时间可以用。我使用的是Asia/Beijing出现了上面的问题</span><br><span class=\"line\">Asia/Harbin</span><br><span class=\"line\">Asia/Shanghai</span><br><span class=\"line\">Asia/Chongqing</span><br><span class=\"line\">Asia/Urumqi</span><br><span class=\"line\">Asia/Kashgar</span><br></pre></td></tr></table></figure>\n<h5 id=\"添加readmemd渲染格式\"><a class=\"markdownIt-Anchor\" href=\"#添加readmemd渲染格式\">#</a> 添加 README.md 渲染格式</h5>\n<p>一般 github 项目的 README.md 都是对项目的自述和介绍等，但 hexo 创建部署的时候并没有给我们创建可以手动在 \\themes\\hexo-theme-next\\source 下自行创建一个 README.md。但部署到 git 上时会发现 README.md 变成了 README.html，被自动转格式了，内容也会有一部分变成乱码就需要在博客的_config.yml 中配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">skip_render: README.md</span><br></pre></td></tr></table></figure>\n<h5 id=\"修改主题\"><a class=\"markdownIt-Anchor\" href=\"#修改主题\">#</a> 修改主题</h5>\n<p>首先从 git 上找到自己喜欢的主题 clone 到 Blog 文件的 themes 文件夹下。比如说主题是 Blog/themes/zhuti</p>\n<p>然后修改_config.yml</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extensions</span><br><span class=\"line\">## Plugins: https://hexo.io/plugins/</span><br><span class=\"line\">## Themes: https://hexo.io/themes/</span><br><span class=\"line\">theme: zhuti(上面例子主题文件夹的名称)</span><br></pre></td></tr></table></figure>\n<p>我使用的是 Next 博客主题也可以去<a href=\"https://hexo.io/themes/\"> themes 主题网站</a> 但需要注意的是里面有一部分主题已经比较老了，导致 node 版本和 hexo 的一部分依赖不匹配，需要修改版本才能使用。</p>\n<h4 id=\"使用next主题\"><a class=\"markdownIt-Anchor\" href=\"#使用next主题\">#</a> 使用 Next 主题</h4>\n<p><a href=\"https://theme-next.iissnan.com/\">next 官网</a></p>\n<h5 id=\"安装next主题我使用的next的github链接\"><a class=\"markdownIt-Anchor\" href=\"#安装next主题我使用的next的github链接\">#</a> 安装 Next 主题（我使用的<a href=\"https://github.com/next-theme/hexo-theme-next\"> next 的 gitHub 链接</a>）</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先cd到Blog的文件夹的themes文件下克隆主题文件</span><br><span class=\"line\">git clone https://github.com/next-theme/hexo-theme-next.git</span><br></pre></td></tr></table></figure>\n<p>然后在 Blog 文件夹下的_config.yml 文件中将主题修改为 next</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme:next</span><br></pre></td></tr></table></figure>\n<p>这样使用 hexo s 生成静态网站就可以看到我们的博客主题已经变成了 Next 主题</p>\n",
            "tags": [
                "工具",
                "hexo"
            ]
        }
    ]
}