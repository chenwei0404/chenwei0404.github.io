{
    "version": "https://jsonfeed.org/version/1",
    "title": "陈伟的BLOG • All posts by \"工具\" tag",
    "description": "哪有小孩一直哭，哪有赌徒一直输。",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/11/28/%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%B9%B6%E8%AE%B0%E5%BD%95%E5%88%9B%E5%BB%BA%E6%96%B9%E6%B3%95/",
            "url": "http://example.com/2023/11/28/%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%B9%B6%E8%AE%B0%E5%BD%95%E5%88%9B%E5%BB%BA%E6%96%B9%E6%B3%95/",
            "title": "创建博客并对博客进行优化",
            "date_published": "2023-11-28T11:43:05.000Z",
            "content_html": "<h3 id=\"搭建hexo博客\"><a class=\"markdownIt-Anchor\" href=\"#搭建hexo博客\">#</a> 搭建 Hexo 博客</h3>\n<p>​\t使用的是 PowerShell 命令行，因为 cmd 没办法直接使用 linux 的简单命令。也可以在 cmd 操作但 cd 的时候要去找文件夹可能会比较麻烦</p>\n<h3 id=\"基本需求\"><a class=\"markdownIt-Anchor\" href=\"#基本需求\">#</a> 基本需求</h3>\n<p>​\t下载 node.js (<a href=\"https://nodejs.org/en\">node.js 官网</a>) 下载完成后使用 node -v 和 npm -v 可以查看版本。最好先下载 nvm，然后通过 nvm 下载 node（先下载 node 再下 nvm 会报错</p>\n<p>下载完 npm 后通过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<p>下载 cnpm 依赖。可以提高下载速度，通过 cnpm -v 也可以查看安装是否成功和具体信息</p>\n<h3 id=\"hexo基本命令\"><a class=\"markdownIt-Anchor\" href=\"#hexo基本命令\">#</a> hexo 基本命令</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo -v   查看版本</span><br><span class=\"line\">hexo clean   清理hexo缓存</span><br><span class=\"line\">hexo n &quot;文章名&quot; ==  hexo new &quot;文章名&quot;</span><br><span class=\"line\">hexo p  ==  hexo publish   草稿</span><br><span class=\"line\">hexo g  == hexo generate   生成静态网页</span><br><span class=\"line\">hexo s  == hexo server    启动本地静态模式</span><br><span class=\"line\">hexo d  == hexo deploy    推送本地数据到服务器</span><br></pre></td></tr></table></figure>\n<h3 id=\"正式步骤\"><a class=\"markdownIt-Anchor\" href=\"#正式步骤\">#</a> 正式步骤</h3>\n<h5 id=\"步骤一安装hexo脚手架\"><a class=\"markdownIt-Anchor\" href=\"#步骤一安装hexo脚手架\">#</a> 步骤一：安装 hexo 脚手架</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm install hexo-cli -g   //安装hexo脚手架</span><br><span class=\"line\">hexo -v   //查看版本信息</span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤二使用hexo\"><a class=\"markdownIt-Anchor\" href=\"#步骤二使用hexo\">#</a> 步骤二：使用 hexo</h5>\n<p>cmd 中切换到需要创建博客的盘符再进行以下操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir Blog    //创建一个Blog文件夹</span><br><span class=\"line\">hexo init     //初始化一个hexo博客 </span><br><span class=\"line\">hexo s        //运行博客在本地的4000端口(localhost:4000)主要是起到一个预览的作用</span><br></pre></td></tr></table></figure>\n<p>浏览器输入 localhost:4000 可以打开一个脚手架自动生成的一个默认博文</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n &quot;博文的名字&quot;       //创建一个自己的博文 hexo n &quot;&quot;  拼全就是hexo new &quot;&quot;,new可以简写成n</span><br><span class=\"line\">cd source/_posts       //到这个路径下再ls看一下是否有刚刚生成的博文</span><br></pre></td></tr></table></figure>\n<h5 id=\"tip修改博文方法之一是vim的方式修改-window无法直接使用-解决方法如下\"><a class=\"markdownIt-Anchor\" href=\"#tip修改博文方法之一是vim的方式修改-window无法直接使用-解决方法如下\">#</a> tip: 修改博文方法之一是 vim 的方式修改。window 无法直接使用。解决方法如下：</h5>\n<p><em><strong>前提</strong></em>：在 powershell 中运行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -o gvim90.exe https://ftp.nluug.nl/pub/vim/pc/gvim90.exe ; ./gvim90.exe</span><br></pre></td></tr></table></figure>\n<p>下载 vim 或者到 (<a href=\"https://www.vim.org/download.php#pc\">官网</a>) 自行下载</p>\n<p>1、以管理员身份运行 PowerShell</p>\n<p>2、 执行以下命令，并输入 Y 即可；这个命令大概的意思就是是否允许执行不信息的脚本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure>\n<p>3、使用 new-item 命令创建一个配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new-item -path $profile -itemtype file -force</span><br></pre></td></tr></table></figure>\n<p>4、创建完成后在 c 盘 - 用户 - 文档 - PowerShell 里的 Microsoft.PowerShell_profile.ps1 文件里加上以下命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set-alias vim &quot;vim.exe的安装位置比如 C:\\Program Files (x86)\\Vim\\vim90\\vim.exe是我的vim.exe位置&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\"># To edit the Powershell Profile</span><br><span class=\"line\"># (Not that I&#x27;ll remember this)</span><br><span class=\"line\">Function Edit-Profile</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    vim $profile</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"># To edit Vim settings</span><br><span class=\"line\">Function Edit-Vimrc</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    vim $HOME\\_vimrc</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">5、最后在powerShell中输入vim出现编辑页面就成功了</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"http://www.wowotech.net/soft/vim_in_powershell.html\">参考文章链接</a></p>\n<p>可以使用 vim 对博客进行修改也可以使用 vscode，hbuildx 等编辑软件打开。编写是 md 的编写格式</p>\n<h5 id=\"将博客部署到github\"><a class=\"markdownIt-Anchor\" href=\"#将博客部署到github\">#</a> 将博客部署到 github</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm i --save hexo-deployer-git            //安装一个git部署插件在Blog文件夹下</span><br></pre></td></tr></table></figure>\n<p>首先进入 github,new repository 新建一个创建，注意仓库地址最好与 git 名一致方便查找。</p>\n<p>打开 Blog 文件夹下的_config.yml 文件，找到</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Deployment</span><br><span class=\"line\">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: &quot;&quot;</span><br></pre></td></tr></table></figure>\n<p>将上面的 type: &quot;&quot; 向下内容修改为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type: git</span><br><span class=\"line\">  repo: github创建的地址</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>修改完成后控制台输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d       //将hexo博客部署到git首次部署会要求输入git账号密码</span><br></pre></td></tr></table></figure>\n<p>部署完之后就可以直接通过网址访问了，如果出现以下类似问题</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TypeError: Cannot read properties of null (reading &#x27;utcOffset&#x27;)</span><br></pre></td></tr></table></figure>\n<p>虽然项目还能运行但在终端会出现警告。大至原因是因为在 Blog 文件下的_config.yml 配置文件内的 timezone 属性出现了问题，改成下面任意一个地区的时间。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//国区只有这五个地区的时间可以用。我使用的是Asia/Beijing出现了上面的问题</span><br><span class=\"line\">Asia/Harbin</span><br><span class=\"line\">Asia/Shanghai</span><br><span class=\"line\">Asia/Chongqing</span><br><span class=\"line\">Asia/Urumqi</span><br><span class=\"line\">Asia/Kashgar</span><br></pre></td></tr></table></figure>\n<h5 id=\"添加readmemd渲染格式\"><a class=\"markdownIt-Anchor\" href=\"#添加readmemd渲染格式\">#</a> 添加 README.md 渲染格式</h5>\n<p>一般 github 项目的 README.md 都是对项目的自述和介绍等，但 hexo 创建部署的时候并没有给我们创建可以手动在 \\themes\\hexo-theme-next\\source 下自行创建一个 README.md。但部署到 git 上时会发现 README.md 变成了 README.html，被自动转格式了，内容也会有一部分变成乱码就需要在博客的_config.yml 中配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">skip_render: README.md</span><br></pre></td></tr></table></figure>\n<h5 id=\"修改主题\"><a class=\"markdownIt-Anchor\" href=\"#修改主题\">#</a> 修改主题</h5>\n<p>首先从 git 上找到自己喜欢的主题 clone 到 Blog 文件的 themes 文件夹下。比如说主题是 Blog/themes/zhuti</p>\n<p>然后修改_config.yml</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extensions</span><br><span class=\"line\">## Plugins: https://hexo.io/plugins/</span><br><span class=\"line\">## Themes: https://hexo.io/themes/</span><br><span class=\"line\">theme: zhuti(上面例子主题文件夹的名称)</span><br></pre></td></tr></table></figure>\n<p>我使用的是 Next 博客主题也可以去<a href=\"https://hexo.io/themes/\"> themes 主题网站</a> 但需要注意的是里面有一部分主题已经比较老了，导致 node 版本和 hexo 的一部分依赖不匹配，需要修改版本才能使用。</p>\n<h4 id=\"使用next主题\"><a class=\"markdownIt-Anchor\" href=\"#使用next主题\">#</a> 使用 Next 主题</h4>\n<p><a href=\"https://theme-next.iissnan.com/\">next 官网</a></p>\n<h5 id=\"安装next主题我使用的next的github链接\"><a class=\"markdownIt-Anchor\" href=\"#安装next主题我使用的next的github链接\">#</a> 安装 Next 主题（我使用的<a href=\"https://github.com/next-theme/hexo-theme-next\"> next 的 gitHub 链接</a>）</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先cd到Blog的文件夹的themes文件下克隆主题文件</span><br><span class=\"line\">git clone https://github.com/next-theme/hexo-theme-next.git</span><br></pre></td></tr></table></figure>\n<p>然后在 Blog 文件夹下的_config.yml 文件中将主题修改为 next</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme:next</span><br></pre></td></tr></table></figure>\n<p>这样使用 hexo s 生成静态网站就可以看到我们的博客主题已经变成了 Next 主题</p>\n<h5 id=\"next的页面样式优化配置项全都在主题文件的_configyml中修改\"><a class=\"markdownIt-Anchor\" href=\"#next的页面样式优化配置项全都在主题文件的_configyml中修改\">#</a> Next 的页面样式优化 (配置项全都在主题文件的_config.yml 中修改)</h5>\n<h6 id=\"设置布局\"><a class=\"markdownIt-Anchor\" href=\"#设置布局\">#</a> 设置布局</h6>\n<p>首先在主题文件的_config.yml 中可以看到 schemes 配置主要分为 muse (默认),mist,pisces,gemini 可以根据想要的效果自己切换</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ---------------------------------------------------------------</span><br><span class=\"line\"># Scheme Settings</span><br><span class=\"line\"># ---------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\"># Schemes</span><br><span class=\"line\"># scheme: Muse</span><br><span class=\"line\"># scheme: Mist</span><br><span class=\"line\"># scheme: Pisces</span><br><span class=\"line\"># scheme: Gemini</span><br></pre></td></tr></table></figure>\n<h6 id=\"添加订阅\"><a class=\"markdownIt-Anchor\" href=\"#添加订阅\">#</a> 添加订阅</h6>\n<p>打开主题文件夹的_config.yml 搜索 follow_me 只要添加以下代码就可以</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RSS: /atom.xml || fa fa-rss</span><br></pre></td></tr></table></figure>\n<p>完成之后点击进任意一个文章，下拉到最下方就可以打到一个 RSS 的订阅标签，在主页是没有标签的。</p>\n<h6 id=\"点击出现桃心效果\"><a class=\"markdownIt-Anchor\" href=\"#点击出现桃心效果\">#</a> 点击出现桃心效果</h6>\n<p>需要在 themes\\hexo-theme-next\\source\\js 文件夹下操作</p>\n<p>创建一个 clickLove.js 文件并将以下内容粘贴进去</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!function (e, t, a) &#123;</span><br><span class=\"line\">    function n() &#123;</span><br><span class=\"line\">        c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;), o(), r()</span><br><span class=\"line\">    &#125; function r() &#123; for (var e = 0; e &lt; d.length; e++)d[e].alpha &lt;= 0 ? (t.body.removeChild(d[e].el), d.splice(e, 1)) : (d[e].y--, d[e].scale += .004, d[e].alpha -= .013, d[e].el.style.cssText = &quot;left:&quot; + d[e].x + &quot;px;top:&quot; + d[e].y + &quot;px;opacity:&quot; + d[e].alpha + &quot;;transform:scale(&quot; + d[e].scale + &quot;,&quot; + d[e].scale + &quot;) rotate(45deg);background:&quot; + d[e].color + &quot;;z-index:99999&quot;); requestAnimationFrame(r) &#125; function o() &#123; var t = &quot;function&quot; == typeof e.onclick &amp;&amp; e.onclick; e.onclick = function (e) &#123; t &amp;&amp; t(), i(e) &#125; &#125; function i(e) &#123; var a = t.createElement(&quot;div&quot;); a.className = &quot;heart&quot;, d.push(&#123; el: a, x: e.clientX - 5, y: e.clientY - 5, scale: 1, alpha: 1, color: s() &#125;), t.body.appendChild(a) &#125; function c(e) &#123; var a = t.createElement(&quot;style&quot;); a.type = &quot;text/css&quot;; try &#123; a.appendChild(t.createTextNode(e)) &#125; catch (t) &#123; a.styleSheet.cssText = e &#125; t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a) &#125; function s() &#123; return &quot;rgb(&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;)&quot; &#125; var d = []; e.requestAnimationFrame = function () &#123; return e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (e) &#123; setTimeout(e, 1e3 / 60) &#125; &#125;(), n()</span><br><span class=\"line\">&#125;(window, document);</span><br></pre></td></tr></table></figure>\n<p>然后在 themes\\hexo-theme-next\\layout_layout.njk 文件的<head></head>中间区域添加</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/clicklove.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>完成之后点击博客区域就可以看到爱心飘出来了。</p>\n<h6 id=\"在文章结尾处添加类似于本文结束的标记\"><a class=\"markdownIt-Anchor\" href=\"#在文章结尾处添加类似于本文结束的标记\">#</a> 在文章结尾处添加类似于 “本文结束” 的标记</h6>\n<p>在 themes\\hexo-theme-next\\layout\\ _macro 中新建一个文件 passage-end-tag.njk 并添加类似以下内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">    &#123;% if not is_index %&#125;</span><br><span class=\"line\">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class=\"line\">    &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>然后再打开 themes\\hexo-theme-next\\layout\\ _macro\\post.njk 文件，搜索 post-footer 然后在前方添加以下代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">   &#123;% if not is_index %&#125;</span><br><span class=\"line\">     &#123;% include &#x27;passage-end-tag.njk&#x27; %&#125;</span><br><span class=\"line\">   &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>然后在主题的_config.yml 中添加</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passage_end_tag: true</span><br></pre></td></tr></table></figure>\n<p>最后打开任意一个博文翻到最后一页就可以看到刚刚添加的效果</p>\n<h6 id=\"添加访客数量\"><a class=\"markdownIt-Anchor\" href=\"#添加访客数量\">#</a> 添加访客数量</h6>\n<p>打开 themes\\hexo-theme-next\\layout\\ _partials\\footer.njk</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//首先在class=&quot;copyright&quot;的div标签上方添加以下代码</span><br><span class=\"line\">&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">//然后在希望出现访客数量的地方添加，本人放在了主页最下方，所以是在footer.njk文件的powered-by上方添加的</span><br><span class=\"line\">&lt;div class=&quot;powered-by&quot;&gt;</span><br><span class=\"line\">&lt;i class=&quot;fa fa-user-md&quot;&gt;&lt;/i&gt;&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</span><br><span class=\"line\">  本站访客数:&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;</span><br><span class=\"line\">&lt;/span&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>访问数量统计有两个方法：</p>\n<p>1、pv, 是指单个用户连续点击 N 个文章就记录 N 次</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;</span><br><span class=\"line\">    本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次</span><br><span class=\"line\">&lt;/span&gt;</span><br></pre></td></tr></table></figure>\n<p>2、uv, 是指单个用户点击 N 个文章只记录 1 次</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</span><br><span class=\"line\">  本站总访问量&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;次</span><br><span class=\"line\">&lt;/span&gt;</span><br></pre></td></tr></table></figure>\n<h6 id=\"添加统计功能\"><a class=\"markdownIt-Anchor\" href=\"#添加统计功能\">#</a> 添加统计功能</h6>\n<p>包括字数统计，阅读时长统计等</p>\n<p>在 \\themes\\hexo-theme-next_config.yml 中配置找到以下内容修改即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Post wordcount display settings</span><br><span class=\"line\"># Dependencies: https://github.com/next-theme/hexo-word-counter</span><br><span class=\"line\">symbols_count_time:</span><br><span class=\"line\">  # 是否另起一行（true的话不和发表时间等同一行）</span><br><span class=\"line\">  separated_meta: true</span><br><span class=\"line\">  # 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）</span><br><span class=\"line\">  item_text_post: true</span><br><span class=\"line\">  # 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）</span><br><span class=\"line\">  item_text_total: true</span><br></pre></td></tr></table></figure>\n<h6 id=\"添加加载效果类似loading\"><a class=\"markdownIt-Anchor\" href=\"#添加加载效果类似loading\">#</a> 添加加载效果 (类似 Loading)</h6>\n<p>查看_config.yml 中是否有 pace 配置项。如果有将 enable 改为 true 即可。如果是老版的 next 的话可能会没有这个配置项需要去引用。详细方法可见 <a href=\"https://zhuanlan.zhihu.com/p/28128674?utm_id=0\">老版 next 解决点击此处，查看第 19 个节</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Progress bar in the top during page loading.</span><br><span class=\"line\"># For more information: https://github.com/CodeByZach/pace</span><br><span class=\"line\">pace:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  # All available colors:</span><br><span class=\"line\">  # black | blue | green | orange | pink | purple | red | silver | white | yellow</span><br><span class=\"line\">  color: blue</span><br><span class=\"line\">  # All available themes:</span><br><span class=\"line\">  # big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span><br><span class=\"line\">  # corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal  这些是一些加载效果，顶部加载进度条是minimal,material是类似一个Loading效果，可以切换自己想要的效果</span><br><span class=\"line\">  theme: minimal</span><br></pre></td></tr></table></figure>\n<h6 id=\"添加版权\"><a class=\"markdownIt-Anchor\" href=\"#添加版权\">#</a> 添加版权</h6>\n<p>_config.yml 中搜索下面的关键字，将 sidebar，post 值改为 true 就可以看到版本声明了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Creative Commons 4.0 International License.</span><br><span class=\"line\"># See: https://creativecommons.org/about/cclicenses/</span><br><span class=\"line\"># 版权</span><br><span class=\"line\">creative_commons:</span><br><span class=\"line\">  # Available values: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | cc-zero</span><br><span class=\"line\">  license: by-nc-sa  # 许可证</span><br><span class=\"line\">  # Available values: big | small</span><br><span class=\"line\">  size: small</span><br><span class=\"line\">  sidebar: true  # 侧边栏展示</span><br><span class=\"line\">  post: true   # 底部展示</span><br><span class=\"line\">  # You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span><br><span class=\"line\">  # CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span><br><span class=\"line\">  language: zh-Hans</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "工具",
                "hexo"
            ]
        }
    ]
}