{
    "version": "https://jsonfeed.org/version/1",
    "title": "陈伟的BLOG • All posts by \"工具\" category",
    "description": "哪有小孩一直哭，哪有赌徒一直输。",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/11/28/%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%B9%B6%E8%AE%B0%E5%BD%95%E5%88%9B%E5%BB%BA%E6%96%B9%E6%B3%95/",
            "url": "http://example.com/2023/11/28/%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%B9%B6%E8%AE%B0%E5%BD%95%E5%88%9B%E5%BB%BA%E6%96%B9%E6%B3%95/",
            "title": "创建Hexo博客",
            "date_published": "2023-11-28T11:43:05.000Z",
            "content_html": "<h3 id=\"基本需求\"><a class=\"markdownIt-Anchor\" href=\"#基本需求\">#</a> 基本需求</h3>\n<p>​\t下载 node.js (<a href=\"https://nodejs.org/en\">node.js 官网</a>) 下载完成后使用 node -v 和 npm -v 可以查看版本。最好先下载 nvm，然后通过 nvm 下载 node（先下载 node 再下 nvm 会报错</p>\n<p>下载完 npm 后通过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<p>下载 cnpm 依赖。可以提高下载速度，通过 cnpm -v 也可以查看安装是否成功和具体信息</p>\n<h3 id=\"hexo基本命令\"><a class=\"markdownIt-Anchor\" href=\"#hexo基本命令\">#</a> hexo 基本命令</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo -v   查看版本</span><br><span class=\"line\">hexo clean   清理hexo缓存</span><br><span class=\"line\">hexo n &quot;文章名&quot; ==  hexo new &quot;文章名&quot;</span><br><span class=\"line\">hexo p  ==  hexo publish   草稿</span><br><span class=\"line\">hexo g  == hexo generate   生成静态网页</span><br><span class=\"line\">hexo s  == hexo server    启动本地静态模式</span><br><span class=\"line\">hexo d  == hexo deploy    推送本地数据到服务器</span><br></pre></td></tr></table></figure>\n<h3 id=\"正式步骤\"><a class=\"markdownIt-Anchor\" href=\"#正式步骤\">#</a> 正式步骤</h3>\n<h5 id=\"步骤一安装hexo脚手架\"><a class=\"markdownIt-Anchor\" href=\"#步骤一安装hexo脚手架\">#</a> 步骤一：安装 hexo 脚手架</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm install hexo-cli -g   //安装hexo脚手架</span><br><span class=\"line\">hexo -v   //查看版本信息</span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤二使用hexo\"><a class=\"markdownIt-Anchor\" href=\"#步骤二使用hexo\">#</a> 步骤二：使用 hexo</h5>\n<p>cmd 中切换到需要创建博客的盘符再进行以下操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir Blog    //创建一个Blog文件夹</span><br><span class=\"line\">hexo init     //初始化一个hexo博客 </span><br><span class=\"line\">hexo s        //运行博客在本地的4000端口(localhost:4000)主要是起到一个预览的作用</span><br></pre></td></tr></table></figure>\n<p>浏览器输入 localhost:4000 可以打开一个脚手架自动生成的一个默认博文</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n &quot;博文的名字&quot;       //创建一个自己的博文 hexo n &quot;&quot;  拼全就是hexo new &quot;&quot;,new可以简写成n</span><br><span class=\"line\">cd source/_posts       //到这个路径下再ls看一下是否有刚刚生成的博文</span><br></pre></td></tr></table></figure>\n<h5 id=\"tip修改博文方法之一是vim的方式修改-window无法直接使用-解决方法如下\"><a class=\"markdownIt-Anchor\" href=\"#tip修改博文方法之一是vim的方式修改-window无法直接使用-解决方法如下\">#</a> tip: 修改博文方法之一是 vim 的方式修改。window 无法直接使用。解决方法如下：</h5>\n<p><em><strong>前提</strong></em>：在 powershell 中运行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -o gvim90.exe https://ftp.nluug.nl/pub/vim/pc/gvim90.exe ; ./gvim90.exe</span><br></pre></td></tr></table></figure>\n<p>下载 vim 或者到 (<a href=\"https://www.vim.org/download.php#pc\">官网</a>) 自行下载</p>\n<p>1、以管理员身份运行 PowerShell</p>\n<p>2、 执行以下命令，并输入 Y 即可；这个命令大概的意思就是是否允许执行不信息的脚本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure>\n<p>3、使用 new-item 命令创建一个配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new-item -path $profile -itemtype file -force</span><br></pre></td></tr></table></figure>\n<p>4、创建完成后在 c 盘 - 用户 - 文档 - PowerShell 里的 Microsoft.PowerShell_profile.ps1 文件里加上以下命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set-alias vim &quot;vim.exe的安装位置比如 C:\\Program Files (x86)\\Vim\\vim90\\vim.exe是我的vim.exe位置&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\"># To edit the Powershell Profile</span><br><span class=\"line\"># (Not that I&#x27;ll remember this)</span><br><span class=\"line\">Function Edit-Profile</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    vim $profile</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"># To edit Vim settings</span><br><span class=\"line\">Function Edit-Vimrc</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    vim $HOME\\_vimrc</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">5、最后在powerShell中输入vim出现编辑页面就成功了</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"http://www.wowotech.net/soft/vim_in_powershell.html\">参考文章链接</a></p>\n<p>可以使用 vim 对博客进行修改也可以使用 vscode，hbuildx 等编辑软件打开。编写是 md 的编写格式</p>\n<h5 id=\"将博客部署到github\"><a class=\"markdownIt-Anchor\" href=\"#将博客部署到github\">#</a> 将博客部署到 github</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm i --save hexo-deployer-git            //安装一个git部署插件在Blog文件夹下</span><br></pre></td></tr></table></figure>\n<p>首先进入 github,new repository 新建一个创建，注意仓库地址最好与 git 名一致方便查找。</p>\n<p>打开 Blog 文件夹下的_config.yml 文件，找到</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Deployment</span><br><span class=\"line\">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: &quot;&quot;</span><br></pre></td></tr></table></figure>\n<p>将上面的 type: &quot;&quot; 向下内容修改为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type: git</span><br><span class=\"line\">  repo: github创建的地址</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>修改完成后控制台输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d       //将hexo博客部署到git首次部署会要求输入git账号密码</span><br></pre></td></tr></table></figure>\n<p>部署完之后就可以直接通过网址访问了，如果出现以下类似问题</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TypeError: Cannot read properties of null (reading &#x27;utcOffset&#x27;)</span><br></pre></td></tr></table></figure>\n<p>虽然项目还能运行但在终端会出现警告。大至原因是因为在 Blog 文件下的_config.yml 配置文件内的 timezone 属性出现了问题，改成下面任意一个地区的时间。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//国区只有这五个地区的时间可以用。我使用的是Asia/Beijing出现了上面的问题</span><br><span class=\"line\">Asia/Harbin</span><br><span class=\"line\">Asia/Shanghai</span><br><span class=\"line\">Asia/Chongqing</span><br><span class=\"line\">Asia/Urumqi</span><br><span class=\"line\">Asia/Kashgar</span><br></pre></td></tr></table></figure>\n<h5 id=\"添加readmemd渲染格式\"><a class=\"markdownIt-Anchor\" href=\"#添加readmemd渲染格式\">#</a> 添加 README.md 渲染格式</h5>\n<p>一般 github 项目的 README.md 都是对项目的自述和介绍等，但 hexo 创建部署的时候并没有给我们创建可以手动在 \\themes\\hexo-theme-next\\source 下自行创建一个 README.md。但部署到 git 上时会发现 README.md 变成了 README.html，被自动转格式了，内容也会有一部分变成乱码就需要在博客的_config.yml 中配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">skip_render: README.md</span><br></pre></td></tr></table></figure>\n<h5 id=\"修改主题\"><a class=\"markdownIt-Anchor\" href=\"#修改主题\">#</a> 修改主题</h5>\n<p>首先从 git 上找到自己喜欢的主题 clone 到 Blog 文件的 themes 文件夹下。比如说主题是 Blog/themes/zhuti</p>\n<p>然后修改_config.yml</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extensions</span><br><span class=\"line\">## Plugins: https://hexo.io/plugins/</span><br><span class=\"line\">## Themes: https://hexo.io/themes/</span><br><span class=\"line\">theme: zhuti(上面例子主题文件夹的名称)</span><br></pre></td></tr></table></figure>\n<p>我使用的是 Next 博客主题也可以去<a href=\"https://hexo.io/themes/\"> themes 主题网站</a> 但需要注意的是里面有一部分主题已经比较老了，导致 node 版本和 hexo 的一部分依赖不匹配，需要修改版本才能使用。</p>\n<h4 id=\"使用next主题\"><a class=\"markdownIt-Anchor\" href=\"#使用next主题\">#</a> 使用 Next 主题</h4>\n<p><a href=\"https://theme-next.iissnan.com/\">next 官网</a></p>\n<h5 id=\"安装next主题我使用的next的github链接\"><a class=\"markdownIt-Anchor\" href=\"#安装next主题我使用的next的github链接\">#</a> 安装 Next 主题（我使用的<a href=\"https://github.com/next-theme/hexo-theme-next\"> next 的 gitHub 链接</a>）</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先cd到Blog的文件夹的themes文件下克隆主题文件</span><br><span class=\"line\">git clone https://github.com/next-theme/hexo-theme-next.git</span><br></pre></td></tr></table></figure>\n<p>然后在 Blog 文件夹下的_config.yml 文件中将主题修改为 next</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme:next</span><br></pre></td></tr></table></figure>\n<p>这样使用 hexo s 生成静态网站就可以看到我们的博客主题已经变成了 Next 主题</p>\n",
            "tags": [
                "工具",
                "hexo"
            ]
        }
    ]
}